set.seed(10)
sample(0:99,4)
set.seed(11)
sample(0:99,4)
sample(0:99,4)
sample(0:99,4)
set.seed(11)
sample(0:99,4)
set.seed(11)
sample(0:99,4)
sample(0:99,4)
sample(0:99,4)
> set.seed(10)
> sample(0:99,4)
set.seed(10)
sample(0:99,4)
source("~/Desktop/INFO 201/a0-foundational-skills-fdouled/Assignment.r")
# you may need to install.packages("nycflights13")
library(nycflights13) # flights contain 336,776 records of flights that departed from NY in 2013
# to see the whole dataset use the function view()
View(flights)
# you may need to install.packages("nycflights13")
library(nycflights13) # flights contain 336,776 records of flights that departed from NY in 2013
# to see the whole dataset use the function view()
View(flights)
airport
if(required("Name"))
{
Flight_arrival%>%rename(dest=f)%>%
semi_join(flight)
flight%>%anti_join(airport%>%rename(dest=f))
airport %> % rename(start=f)%>%
semi_join(flight)
}
airport
if(required("Name"))
{
Flight_arrival%>%rename(dest=f)%>%
semi_join(flight)
flight%>%anti_join(airport%>%rename(dest=f))
airport %> % rename(start=f)%>%
semi_join(flight)
}
load("~/Desktop/INFO 201/.RData")
names_df <- read.csv("/Users/fardowsa/Desktop/INFO 201/female_names.csv")
# to see the whole dataset use the function view()
View(flights)
source("~/Desktop/Untitled.R")
# Identify the airline (`carrier`) that has the highest number of
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>% airline (carrier)
filter(dep_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# Identify the airline (`carrier`) that has the highest number of
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>% airline (carrier)
filter(dep_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# Identify the airline (`carrier`) that has the highest number of
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(dep_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# Identify the airline (`carrier`) that has the highest number of
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(dep_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(arr_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(arr_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(arr_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
# delayed flights
has_most_delays <- flights %>%
# the flights
group_by(carrier) %>%
#airline (carrier)
filter(arr_delay > 0) %>%
# the delays
summarize(num_delay = n()) %>%
# observations
filter(num_delay == max(num_delay)) %>% # find most delayed
select(carrier) # select the airline
source("~/Desktop/Untitled.R")
has_most_delays <- flights %>%
group_by(carrier) %>%
filter(dep_delay > 0) %>%
summarize(num_delay = n()) %>%
filter(num_delay == max(num_delay)) %>%
select(carrier)
has_most_delays <- flights %>%
group_by(carrier) %>%
filter(dep_delay > 0) %>%
summarize(num_delay = n()) %>%
filter(num_delay == max(num_delay)) %>%
select(carrier)
has_most_delays <- flights %>%
group_by(carrier) %>%
filter(dep_delay > 0) %>%
summarize(num_delay = n()) %>%
filter(num_delay == avg(num_delay)) %>%
select(carrier)
source("~/Desktop/INFO 201/Lec07 08 demo.R")
library(readr)
female_names <- read_csv("Desktop/INFO 201/female_names.csv")
View(female_names)
names_df <- read.csv("/Users/fardowsa/Desktop/INFO 201/female_names.csv")
#names_df <- read.csv("/Users/fardowsa/Desktop/INFO 201/female_names.csv")
names_df <- read.csv("~/INFO 201/female_names.csv")
source("~/Desktop/INFO 201/Lec07 08 demo.R")
source("~/Desktop/INFO 201/Lec07 08 demo.R")
names_2013_df <- names_df[ names_df$year == 2013, ]
source("~/Desktop/INFO 201/Lec07 08 demo.R")
names_2013_df <- names_df[ names_df$year == 2013, ]
source("~/Desktop/INFO 201/Lec07 08 demo.R")
names_df <- read.csv("~/INFO 201/female_names.csv")
names_df <- read.csv("~/INFO 201/female_names.csv")
setwd("~/Desktop/INFO 201/final-projects-swizzlejuice/exploratory analysis")
setwd("~/Desktop/INFO 201/final-projects-swizzlejuice/exploratory analysis/Race vs Categories Oscars")
library(tidyverse)
library(dplyr)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
#race_and_category <- select (year_ceremony, Race, Category, )
race_and_category <- filtered_oscars[,col]
library(shiny)
library(dplyr)
library(fmsb)
the_oscars <- read.csv("oscars.csv")
unique(filtered_oscars$Category)
View(race_and_category)
oscars_df <- mutate(race_and_category, unique_categories = unique(filtered_oscars$Category))
race_and_category <- race_and_category %>%
mutate(race_and_category, unique_categories = unique(filtered_oscars$Category))
race_and_category <- race_and_category %>%
group_by(Category)
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category) %>%
summarise(distribution = Race)
View(race_and_category)
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race)
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count(Race)
View(race_and_category)
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
select(Category) %>%
group_by(Race) %>%
count(Race)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count(Race)
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count()
View(race_and_category)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count()
View(race_and_category)
setwd("~/Desktop/INFO 201/final-projects-swizzlejuice/exploratory analysis/Race vs Categories Oscars")
library(shiny)
library(dplyr)
library(fmsb)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
#coutn rows on race
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count()
#summarise(distribution = Race)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
#coutn rows on race
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
group_by(Category, Race)
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
Category <- c(rep("Best Actor" , 4) , rep("Best Actor in supporting role" , 4) , rep("Best Actress" , 4) , rep("ACTRESS IN A SUPPORTING ROLE" , 4),
rep("PRODUCTION DESIGN" , 4) , rep("CINEMATOGRAPHY" , 4) , rep("COSTUME DESIGN" , 4) , rep("DIRECTING" , 4),
rep("DOCUMENTARY (Feature)" , 4) , rep("DOCUMENTARY (Short Subject)" , 4) , rep("FILM EDITING" , 4) , rep("FOREIGN LANGUAGE FILM" , 4),
rep("MUSIC (Original Score)" , 4) , rep("MUSIC (Original Song Score and Its Adaptation -or- Adaptation Score)" , 4) , rep("MUSIC (Original Song)" , 4) ,rep("BEST PICTURE" , 4),
rep("SHORT FILM (Animated)" , 4) , rep("SHORT FILM (Live Action)" , 4) , rep("SOUND" , 4) , rep("VISUAL EFFECTS" , 4),
rep("WRITING (Adapted Screenplay)" , 4) , rep("WRITING (Screenplay Written Directly for the Screen)" , 4) , rep("SPECIAL ACHIEVEMENT AWARD (Sound Editing)" , 4) , rep("JEAN HERSHOLT HUMANITARIAN AWARDS" , 4),
rep("HONORARY AWARD" , 4) , rep("IRVING G. THALBERG MEMORIAL AWARD" , 4) , rep("SHORT FILM (Dramatic Live Action)" , 4) , rep("SPECIAL ACHIEVEMENT AWARD (Visual Effects)" , 4),
rep("MAKEUP" , 4) , rep("SPECIAL ACHIEVEMENT AWARD (Sound Effects Editing)" , 4) , rep("SOUND EFFECTS EDITING" , 4) , rep("MUSIC (Original Song Score or Adaptation Score)" , 4),
rep("MUSIC (Original Song Score)" , 4) , rep("SPECIAL ACHIEVEMENT AWARD" , 4) , rep("MUSIC (Original Dramatic Score)" , 4) , rep("MUSIC (Original Musical or Comedy Score)" , 4),
rep("SOUND EDITING" , 4) , rep("ANIMATED FEATURE FILM" , 4) , rep("WRITING (Original Screenplay)" , 4) , rep("SOUND MIXING" , 4),
rep("MAKEUP AND HAIRSTYLING" , 4) , rep("SPECIAL AWARD" , 4) , rep("INTERNATIONAL FEATURE FILM" , 4) )
Race <- rep(c("White" , "Asian" , "Black", "Hispanic") , 43)
Percentage <- abs(rnorm(12 , 0 , 15))
race_and_category <- data.frame(Category,Race,Percentage)
# Stacked + percent
ggplot(race_and_category, aes(fill=Race, y=Percentage, x=Category)) +
geom_bar(position="fill", stat="identity")
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
#coutn rows on race
race_and_category <- race_and_category %>%
group_by(Category) %>%
group_by(Race) %>%
count()
View(race_and_category)
the_oscars <- read.csv("oscars.csv")
filtered_oscars <- the_oscars %>% filter(year_ceremony >= 1980)
#get only the columns
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count(n = nominees)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count(N = nominees)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count(N = "nominees")
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count(nominee = n())
View(race_and_category)
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
col <- c("year_ceremony", "Race", "Category")
race_and_category <- filtered_oscars[,col]
#count racial distribution per category
race_and_category <- race_and_category %>%
group_by(Category, Race) %>%
count()
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
runApp()
View(race_and_category)
runApp()
runApp()
View(race_and_category)
View(filtered_oscars)
View(filtered_oscars)
View(the_oscars)
runApp()
View(race_and_category)
runApp()
unique(race_and_category$Category)
View(race_and_category)
View(race_and_category)
View(race_and_category)
View(race_and_category)
runApp('~/Desktop/INFO 201/Lecture14 demo')
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
View(race_and_category)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
race_and_category$Race
unique(race_and_category$Race)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
runApp()
View(race_and_category)
runApp()
runApp()
View(race_and_category)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/INFO 201/Lecture15:16 demo')
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
setwd("~/Desktop/INFO 201/final-projects-swizzlejuice/exploratory analysis")
setwd("~/Desktop/INFO 201/final-projects-swizzlejuice/exploratory analysis/Racial Distribution per Category")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
